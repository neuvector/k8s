// Code generated by protoc-gen-go. DO NOT EDIT.
// source: generated.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	// v1 "k8s.io/apimachinery/pkg/apis/meta/v1"  // by William on 03/08/2024
    // _ "k8s.io/apimachinery/pkg/runtime"        // by William on 03/08/2024
	// _ "k8s.io/apimachinery/pkg/runtime/schema" // by William on 03/08/2024
    v1 "github.com/neuvector/k8s/apis/meta/v1"  
    _ "github.com/neuvector/k8s/runtime"
	_ "github.com/neuvector/k8s/runtime/schema"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
type MatchCondition struct {
	// Name is an identifier for this match condition, used for strategic merging of MatchConditions,
	// as well as providing an identifier for logging purposes. A good name should be descriptive of
	// the associated expression.
	// Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and
	// must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or
	// '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an
	// optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')
	//
	// Required.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.
	// CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:
	//
	// 'object' - The object from the incoming request. The value is null for DELETE requests.
	// 'oldObject' - The existing object. The value is null for CREATE requests.
	// 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).
	// 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.
	//   See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz
	// 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the
	//   request resource.
	// Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/
	//
	// Required.
	Expression           *string  `protobuf:"bytes,2,opt,name=expression" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchCondition) Reset()         { *m = MatchCondition{} }
func (m *MatchCondition) String() string { return proto.CompactTextString(m) }
func (*MatchCondition) ProtoMessage()    {}
func (*MatchCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{0}
}

func (m *MatchCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchCondition.Unmarshal(m, b)
}
func (m *MatchCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchCondition.Marshal(b, m, deterministic)
}
func (m *MatchCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchCondition.Merge(m, src)
}
func (m *MatchCondition) XXX_Size() int {
	return xxx_messageInfo_MatchCondition.Size(m)
}
func (m *MatchCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchCondition.DiscardUnknown(m)
}

var xxx_messageInfo_MatchCondition proto.InternalMessageInfo

func (m *MatchCondition) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MatchCondition) GetExpression() string {
	if m != nil && m.Expression != nil {
		return *m.Expression
	}
	return ""
}

// MutatingWebhook describes an admission webhook and the resources and operations it applies to.
type MutatingWebhook struct {
	// The name of the admission webhook.
	// Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where
	// "imagepolicy" is the name of the webhook, and kubernetes.io is the name
	// of the organization.
	// Required.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// ClientConfig defines how to communicate with the hook.
	// Required
	ClientConfig *WebhookClientConfig `protobuf:"bytes,2,opt,name=clientConfig" json:"clientConfig,omitempty"`
	// Rules describes what operations on what resources/subresources the webhook cares about.
	// The webhook cares about an operation if it matches _any_ Rule.
	// However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks
	// from putting the cluster in a state which cannot be recovered from without completely
	// disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called
	// on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
	// +listType=atomic
	Rules []*RuleWithOperations `protobuf:"bytes,3,rep,name=rules" json:"rules,omitempty"`
	// FailurePolicy defines how unrecognized errors from the admission endpoint are handled -
	// allowed values are Ignore or Fail. Defaults to Fail.
	// +optional
	FailurePolicy *string `protobuf:"bytes,4,opt,name=failurePolicy" json:"failurePolicy,omitempty"`
	// matchPolicy defines how the "rules" list is used to match incoming requests.
	// Allowed values are "Exact" or "Equivalent".
	//
	// - Exact: match a request only if it exactly matches a specified rule.
	// For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
	// but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`,
	// a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
	//
	// - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version.
	// For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
	// and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`,
	// a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
	//
	// Defaults to "Equivalent"
	// +optional
	MatchPolicy *string `protobuf:"bytes,9,opt,name=matchPolicy" json:"matchPolicy,omitempty"`
	// NamespaceSelector decides whether to run the webhook on an object based
	// on whether the namespace for that object matches the selector. If the
	// object itself is a namespace, the matching is performed on
	// object.metadata.labels. If the object is another cluster scoped resource,
	// it never skips the webhook.
	//
	// For example, to run the webhook on any objects whose namespace is not
	// associated with "runlevel" of "0" or "1";  you will set the selector as
	// follows:
	// "namespaceSelector": {
	//   "matchExpressions": [
	//     {
	//       "key": "runlevel",
	//       "operator": "NotIn",
	//       "values": [
	//         "0",
	//         "1"
	//       ]
	//     }
	//   ]
	// }
	//
	// If instead you want to only run the webhook on any objects whose
	// namespace is associated with the "environment" of "prod" or "staging";
	// you will set the selector as follows:
	// "namespaceSelector": {
	//   "matchExpressions": [
	//     {
	//       "key": "environment",
	//       "operator": "In",
	//       "values": [
	//         "prod",
	//         "staging"
	//       ]
	//     }
	//   ]
	// }
	//
	// See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
	// for more examples of label selectors.
	//
	// Default to the empty LabelSelector, which matches everything.
	// +optional
	NamespaceSelector *v1.LabelSelector `protobuf:"bytes,5,opt,name=namespaceSelector" json:"namespaceSelector,omitempty"`
	// ObjectSelector decides whether to run the webhook based on if the
	// object has matching labels. objectSelector is evaluated against both
	// the oldObject and newObject that would be sent to the webhook, and
	// is considered to match if either object matches the selector. A null
	// object (oldObject in the case of create, or newObject in the case of
	// delete) or an object that cannot have labels (like a
	// DeploymentRollback or a PodProxyOptions object) is not considered to
	// match.
	// Use the object selector only if the webhook is opt-in, because end
	// users may skip the admission webhook by setting the labels.
	// Default to the empty LabelSelector, which matches everything.
	// +optional
	ObjectSelector *v1.LabelSelector `protobuf:"bytes,11,opt,name=objectSelector" json:"objectSelector,omitempty"`
	// SideEffects states whether this webhook has side effects.
	// Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown).
	// Webhooks with side effects MUST implement a reconciliation system, since a request may be
	// rejected by a future step in the admission chain and the side effects therefore need to be undone.
	// Requests with the dryRun attribute will be auto-rejected if they match a webhook with
	// sideEffects == Unknown or Some.
	SideEffects *string `protobuf:"bytes,6,opt,name=sideEffects" json:"sideEffects,omitempty"`
	// TimeoutSeconds specifies the timeout for this webhook. After the timeout passes,
	// the webhook call will be ignored or the API call will fail based on the
	// failure policy.
	// The timeout value must be between 1 and 30 seconds.
	// Default to 10 seconds.
	// +optional
	TimeoutSeconds *int32 `protobuf:"varint,7,opt,name=timeoutSeconds" json:"timeoutSeconds,omitempty"`
	// AdmissionReviewVersions is an ordered list of preferred `AdmissionReview`
	// versions the Webhook expects. API server will try to use first version in
	// the list which it supports. If none of the versions specified in this list
	// supported by API server, validation will fail for this object.
	// If a persisted webhook configuration specifies allowed versions and does not
	// include any versions known to the API Server, calls to the webhook will fail
	// and be subject to the failure policy.
	// +listType=atomic
	AdmissionReviewVersions []string `protobuf:"bytes,8,rep,name=admissionReviewVersions" json:"admissionReviewVersions,omitempty"`
	// reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation.
	// Allowed values are "Never" and "IfNeeded".
	//
	// Never: the webhook will not be called more than once in a single admission evaluation.
	//
	// IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation
	// if the object being admitted is modified by other admission plugins after the initial webhook call.
	// Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted.
	// Note:
	// * the number of additional invocations is not guaranteed to be exactly one.
	// * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again.
	// * webhooks that use this option may be reordered to minimize the number of additional invocations.
	// * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.
	//
	// Defaults to "Never".
	// +optional
	ReinvocationPolicy *string `protobuf:"bytes,10,opt,name=reinvocationPolicy" json:"reinvocationPolicy,omitempty"`
	// MatchConditions is a list of conditions that must be met for a request to be sent to this
	// webhook. Match conditions filter requests that have already been matched by the rules,
	// namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests.
	// There are a maximum of 64 match conditions allowed.
	//
	// The exact matching logic is (in order):
	//   1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.
	//   2. If ALL matchConditions evaluate to TRUE, the webhook is called.
	//   3. If any matchCondition evaluates to an error (but none are FALSE):
	//      - If failurePolicy=Fail, reject the request
	//      - If failurePolicy=Ignore, the error is ignored and the webhook is skipped
	//
	// +patchMergeKey=name
	// +patchStrategy=merge
	// +listType=map
	// +listMapKey=name
	// +optional
	MatchConditions      []*MatchCondition `protobuf:"bytes,12,rep,name=matchConditions" json:"matchConditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MutatingWebhook) Reset()         { *m = MutatingWebhook{} }
func (m *MutatingWebhook) String() string { return proto.CompactTextString(m) }
func (*MutatingWebhook) ProtoMessage()    {}
func (*MutatingWebhook) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{1}
}

func (m *MutatingWebhook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutatingWebhook.Unmarshal(m, b)
}
func (m *MutatingWebhook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutatingWebhook.Marshal(b, m, deterministic)
}
func (m *MutatingWebhook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutatingWebhook.Merge(m, src)
}
func (m *MutatingWebhook) XXX_Size() int {
	return xxx_messageInfo_MutatingWebhook.Size(m)
}
func (m *MutatingWebhook) XXX_DiscardUnknown() {
	xxx_messageInfo_MutatingWebhook.DiscardUnknown(m)
}

var xxx_messageInfo_MutatingWebhook proto.InternalMessageInfo

func (m *MutatingWebhook) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MutatingWebhook) GetClientConfig() *WebhookClientConfig {
	if m != nil {
		return m.ClientConfig
	}
	return nil
}

func (m *MutatingWebhook) GetRules() []*RuleWithOperations {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *MutatingWebhook) GetFailurePolicy() string {
	if m != nil && m.FailurePolicy != nil {
		return *m.FailurePolicy
	}
	return ""
}

func (m *MutatingWebhook) GetMatchPolicy() string {
	if m != nil && m.MatchPolicy != nil {
		return *m.MatchPolicy
	}
	return ""
}

func (m *MutatingWebhook) GetNamespaceSelector() *v1.LabelSelector {
	if m != nil {
		return m.NamespaceSelector
	}
	return nil
}

func (m *MutatingWebhook) GetObjectSelector() *v1.LabelSelector {
	if m != nil {
		return m.ObjectSelector
	}
	return nil
}

func (m *MutatingWebhook) GetSideEffects() string {
	if m != nil && m.SideEffects != nil {
		return *m.SideEffects
	}
	return ""
}

func (m *MutatingWebhook) GetTimeoutSeconds() int32 {
	if m != nil && m.TimeoutSeconds != nil {
		return *m.TimeoutSeconds
	}
	return 0
}

func (m *MutatingWebhook) GetAdmissionReviewVersions() []string {
	if m != nil {
		return m.AdmissionReviewVersions
	}
	return nil
}

func (m *MutatingWebhook) GetReinvocationPolicy() string {
	if m != nil && m.ReinvocationPolicy != nil {
		return *m.ReinvocationPolicy
	}
	return ""
}

func (m *MutatingWebhook) GetMatchConditions() []*MatchCondition {
	if m != nil {
		return m.MatchConditions
	}
	return nil
}

// MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.
type MutatingWebhookConfiguration struct {
	// Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Webhooks is a list of webhooks and the affected resources and operations.
	// +optional
	// +patchMergeKey=name
	// +patchStrategy=merge
	// +listType=map
	// +listMapKey=name
	Webhooks             []*MutatingWebhook `protobuf:"bytes,2,rep,name=Webhooks" json:"Webhooks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MutatingWebhookConfiguration) Reset()         { *m = MutatingWebhookConfiguration{} }
func (m *MutatingWebhookConfiguration) String() string { return proto.CompactTextString(m) }
func (*MutatingWebhookConfiguration) ProtoMessage()    {}
func (*MutatingWebhookConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{2}
}

func (m *MutatingWebhookConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutatingWebhookConfiguration.Unmarshal(m, b)
}
func (m *MutatingWebhookConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutatingWebhookConfiguration.Marshal(b, m, deterministic)
}
func (m *MutatingWebhookConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutatingWebhookConfiguration.Merge(m, src)
}
func (m *MutatingWebhookConfiguration) XXX_Size() int {
	return xxx_messageInfo_MutatingWebhookConfiguration.Size(m)
}
func (m *MutatingWebhookConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_MutatingWebhookConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_MutatingWebhookConfiguration proto.InternalMessageInfo

func (m *MutatingWebhookConfiguration) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *MutatingWebhookConfiguration) GetWebhooks() []*MutatingWebhook {
	if m != nil {
		return m.Webhooks
	}
	return nil
}

// MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.
type MutatingWebhookConfigurationList struct {
	// Standard list metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// List of MutatingWebhookConfiguration.
	Items                []*MutatingWebhookConfiguration `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *MutatingWebhookConfigurationList) Reset()         { *m = MutatingWebhookConfigurationList{} }
func (m *MutatingWebhookConfigurationList) String() string { return proto.CompactTextString(m) }
func (*MutatingWebhookConfigurationList) ProtoMessage()    {}
func (*MutatingWebhookConfigurationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{3}
}

func (m *MutatingWebhookConfigurationList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutatingWebhookConfigurationList.Unmarshal(m, b)
}
func (m *MutatingWebhookConfigurationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutatingWebhookConfigurationList.Marshal(b, m, deterministic)
}
func (m *MutatingWebhookConfigurationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutatingWebhookConfigurationList.Merge(m, src)
}
func (m *MutatingWebhookConfigurationList) XXX_Size() int {
	return xxx_messageInfo_MutatingWebhookConfigurationList.Size(m)
}
func (m *MutatingWebhookConfigurationList) XXX_DiscardUnknown() {
	xxx_messageInfo_MutatingWebhookConfigurationList.DiscardUnknown(m)
}

var xxx_messageInfo_MutatingWebhookConfigurationList proto.InternalMessageInfo

func (m *MutatingWebhookConfigurationList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *MutatingWebhookConfigurationList) GetItems() []*MutatingWebhookConfiguration {
	if m != nil {
		return m.Items
	}
	return nil
}

// Rule is a tuple of APIGroups, APIVersion, and Resources.It is recommended
// to make sure that all the tuple expansions are valid.
type Rule struct {
	// APIGroups is the API groups the resources belong to. '*' is all groups.
	// If '*' is present, the length of the slice must be one.
	// Required.
	// +listType=atomic
	ApiGroups []string `protobuf:"bytes,1,rep,name=apiGroups" json:"apiGroups,omitempty"`
	// APIVersions is the API versions the resources belong to. '*' is all versions.
	// If '*' is present, the length of the slice must be one.
	// Required.
	// +listType=atomic
	ApiVersions []string `protobuf:"bytes,2,rep,name=apiVersions" json:"apiVersions,omitempty"`
	// Resources is a list of resources this rule applies to.
	//
	// For example:
	// 'pods' means pods.
	// 'pods/log' means the log subresource of pods.
	// '*' means all resources, but not subresources.
	// 'pods/*' means all subresources of pods.
	// '*/scale' means all scale subresources.
	// '*/*' means all resources and their subresources.
	//
	// If wildcard is present, the validation rule will ensure resources do not
	// overlap with each other.
	//
	// Depending on the enclosing object, subresources might not be allowed.
	// Required.
	// +listType=atomic
	Resources []string `protobuf:"bytes,3,rep,name=resources" json:"resources,omitempty"`
	// scope specifies the scope of this rule.
	// Valid values are "Cluster", "Namespaced", and "*"
	// "Cluster" means that only cluster-scoped resources will match this rule.
	// Namespace API objects are cluster-scoped.
	// "Namespaced" means that only namespaced resources will match this rule.
	// "*" means that there are no scope restrictions.
	// Subresources match the scope of their parent resource.
	// Default is "*".
	//
	// +optional
	Scope                *string  `protobuf:"bytes,4,opt,name=scope" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{4}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetApiGroups() []string {
	if m != nil {
		return m.ApiGroups
	}
	return nil
}

func (m *Rule) GetApiVersions() []string {
	if m != nil {
		return m.ApiVersions
	}
	return nil
}

func (m *Rule) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Rule) GetScope() string {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return ""
}

// RuleWithOperations is a tuple of Operations and Resources. It is recommended to make
// sure that all the tuple expansions are valid.
type RuleWithOperations struct {
	// Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or *
	// for all of those operations and any future admission operations that are added.
	// If '*' is present, the length of the slice must be one.
	// Required.
	// +listType=atomic
	Operations []string `protobuf:"bytes,1,rep,name=operations" json:"operations,omitempty"`
	// Rule is embedded, it describes other criteria of the rule, like
	// APIGroups, APIVersions, Resources, etc.
	Rule                 *Rule    `protobuf:"bytes,2,opt,name=rule" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuleWithOperations) Reset()         { *m = RuleWithOperations{} }
func (m *RuleWithOperations) String() string { return proto.CompactTextString(m) }
func (*RuleWithOperations) ProtoMessage()    {}
func (*RuleWithOperations) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{5}
}

func (m *RuleWithOperations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleWithOperations.Unmarshal(m, b)
}
func (m *RuleWithOperations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleWithOperations.Marshal(b, m, deterministic)
}
func (m *RuleWithOperations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleWithOperations.Merge(m, src)
}
func (m *RuleWithOperations) XXX_Size() int {
	return xxx_messageInfo_RuleWithOperations.Size(m)
}
func (m *RuleWithOperations) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleWithOperations.DiscardUnknown(m)
}

var xxx_messageInfo_RuleWithOperations proto.InternalMessageInfo

func (m *RuleWithOperations) GetOperations() []string {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *RuleWithOperations) GetRule() *Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

// ServiceReference holds a reference to Service.legacy.k8s.io
type ServiceReference struct {
	// `namespace` is the namespace of the service.
	// Required
	Namespace *string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	// `name` is the name of the service.
	// Required
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// `path` is an optional URL path which will be sent in any request to
	// this service.
	// +optional
	Path *string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	// If specified, the port on the service that hosting webhook.
	// Default to 443 for backward compatibility.
	// `port` should be a valid port number (1-65535, inclusive).
	// +optional
	Port                 *int32   `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceReference) Reset()         { *m = ServiceReference{} }
func (m *ServiceReference) String() string { return proto.CompactTextString(m) }
func (*ServiceReference) ProtoMessage()    {}
func (*ServiceReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{6}
}

func (m *ServiceReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceReference.Unmarshal(m, b)
}
func (m *ServiceReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceReference.Marshal(b, m, deterministic)
}
func (m *ServiceReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceReference.Merge(m, src)
}
func (m *ServiceReference) XXX_Size() int {
	return xxx_messageInfo_ServiceReference.Size(m)
}
func (m *ServiceReference) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceReference.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceReference proto.InternalMessageInfo

func (m *ServiceReference) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ServiceReference) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ServiceReference) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *ServiceReference) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

// ValidatingWebhook describes an admission webhook and the resources and operations it applies to.
type ValidatingWebhook struct {
	// The name of the admission webhook.
	// Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where
	// "imagepolicy" is the name of the webhook, and kubernetes.io is the name
	// of the organization.
	// Required.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// ClientConfig defines how to communicate with the hook.
	// Required
	ClientConfig *WebhookClientConfig `protobuf:"bytes,2,opt,name=clientConfig" json:"clientConfig,omitempty"`
	// Rules describes what operations on what resources/subresources the webhook cares about.
	// The webhook cares about an operation if it matches _any_ Rule.
	// However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks
	// from putting the cluster in a state which cannot be recovered from without completely
	// disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called
	// on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
	// +listType=atomic
	Rules []*RuleWithOperations `protobuf:"bytes,3,rep,name=rules" json:"rules,omitempty"`
	// FailurePolicy defines how unrecognized errors from the admission endpoint are handled -
	// allowed values are Ignore or Fail. Defaults to Fail.
	// +optional
	FailurePolicy *string `protobuf:"bytes,4,opt,name=failurePolicy" json:"failurePolicy,omitempty"`
	// matchPolicy defines how the "rules" list is used to match incoming requests.
	// Allowed values are "Exact" or "Equivalent".
	//
	// - Exact: match a request only if it exactly matches a specified rule.
	// For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
	// but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`,
	// a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
	//
	// - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version.
	// For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
	// and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`,
	// a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
	//
	// Defaults to "Equivalent"
	// +optional
	MatchPolicy *string `protobuf:"bytes,9,opt,name=matchPolicy" json:"matchPolicy,omitempty"`
	// NamespaceSelector decides whether to run the webhook on an object based
	// on whether the namespace for that object matches the selector. If the
	// object itself is a namespace, the matching is performed on
	// object.metadata.labels. If the object is another cluster scoped resource,
	// it never skips the webhook.
	//
	// For example, to run the webhook on any objects whose namespace is not
	// associated with "runlevel" of "0" or "1";  you will set the selector as
	// follows:
	// "namespaceSelector": {
	//   "matchExpressions": [
	//     {
	//       "key": "runlevel",
	//       "operator": "NotIn",
	//       "values": [
	//         "0",
	//         "1"
	//       ]
	//     }
	//   ]
	// }
	//
	// If instead you want to only run the webhook on any objects whose
	// namespace is associated with the "environment" of "prod" or "staging";
	// you will set the selector as follows:
	// "namespaceSelector": {
	//   "matchExpressions": [
	//     {
	//       "key": "environment",
	//       "operator": "In",
	//       "values": [
	//         "prod",
	//         "staging"
	//       ]
	//     }
	//   ]
	// }
	//
	// See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
	// for more examples of label selectors.
	//
	// Default to the empty LabelSelector, which matches everything.
	// +optional
	NamespaceSelector *v1.LabelSelector `protobuf:"bytes,5,opt,name=namespaceSelector" json:"namespaceSelector,omitempty"`
	// ObjectSelector decides whether to run the webhook based on if the
	// object has matching labels. objectSelector is evaluated against both
	// the oldObject and newObject that would be sent to the webhook, and
	// is considered to match if either object matches the selector. A null
	// object (oldObject in the case of create, or newObject in the case of
	// delete) or an object that cannot have labels (like a
	// DeploymentRollback or a PodProxyOptions object) is not considered to
	// match.
	// Use the object selector only if the webhook is opt-in, because end
	// users may skip the admission webhook by setting the labels.
	// Default to the empty LabelSelector, which matches everything.
	// +optional
	ObjectSelector *v1.LabelSelector `protobuf:"bytes,10,opt,name=objectSelector" json:"objectSelector,omitempty"`
	// SideEffects states whether this webhook has side effects.
	// Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown).
	// Webhooks with side effects MUST implement a reconciliation system, since a request may be
	// rejected by a future step in the admission chain and the side effects therefore need to be undone.
	// Requests with the dryRun attribute will be auto-rejected if they match a webhook with
	// sideEffects == Unknown or Some.
	SideEffects *string `protobuf:"bytes,6,opt,name=sideEffects" json:"sideEffects,omitempty"`
	// TimeoutSeconds specifies the timeout for this webhook. After the timeout passes,
	// the webhook call will be ignored or the API call will fail based on the
	// failure policy.
	// The timeout value must be between 1 and 30 seconds.
	// Default to 10 seconds.
	// +optional
	TimeoutSeconds *int32 `protobuf:"varint,7,opt,name=timeoutSeconds" json:"timeoutSeconds,omitempty"`
	// AdmissionReviewVersions is an ordered list of preferred `AdmissionReview`
	// versions the Webhook expects. API server will try to use first version in
	// the list which it supports. If none of the versions specified in this list
	// supported by API server, validation will fail for this object.
	// If a persisted webhook configuration specifies allowed versions and does not
	// include any versions known to the API Server, calls to the webhook will fail
	// and be subject to the failure policy.
	// +listType=atomic
	AdmissionReviewVersions []string `protobuf:"bytes,8,rep,name=admissionReviewVersions" json:"admissionReviewVersions,omitempty"`
	// MatchConditions is a list of conditions that must be met for a request to be sent to this
	// webhook. Match conditions filter requests that have already been matched by the rules,
	// namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests.
	// There are a maximum of 64 match conditions allowed.
	//
	// The exact matching logic is (in order):
	//   1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.
	//   2. If ALL matchConditions evaluate to TRUE, the webhook is called.
	//   3. If any matchCondition evaluates to an error (but none are FALSE):
	//      - If failurePolicy=Fail, reject the request
	//      - If failurePolicy=Ignore, the error is ignored and the webhook is skipped
	//
	// +patchMergeKey=name
	// +patchStrategy=merge
	// +listType=map
	// +listMapKey=name
	// +optional
	MatchConditions      []*MatchCondition `protobuf:"bytes,11,rep,name=matchConditions" json:"matchConditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ValidatingWebhook) Reset()         { *m = ValidatingWebhook{} }
func (m *ValidatingWebhook) String() string { return proto.CompactTextString(m) }
func (*ValidatingWebhook) ProtoMessage()    {}
func (*ValidatingWebhook) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{7}
}

func (m *ValidatingWebhook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatingWebhook.Unmarshal(m, b)
}
func (m *ValidatingWebhook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatingWebhook.Marshal(b, m, deterministic)
}
func (m *ValidatingWebhook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatingWebhook.Merge(m, src)
}
func (m *ValidatingWebhook) XXX_Size() int {
	return xxx_messageInfo_ValidatingWebhook.Size(m)
}
func (m *ValidatingWebhook) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatingWebhook.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatingWebhook proto.InternalMessageInfo

func (m *ValidatingWebhook) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ValidatingWebhook) GetClientConfig() *WebhookClientConfig {
	if m != nil {
		return m.ClientConfig
	}
	return nil
}

func (m *ValidatingWebhook) GetRules() []*RuleWithOperations {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *ValidatingWebhook) GetFailurePolicy() string {
	if m != nil && m.FailurePolicy != nil {
		return *m.FailurePolicy
	}
	return ""
}

func (m *ValidatingWebhook) GetMatchPolicy() string {
	if m != nil && m.MatchPolicy != nil {
		return *m.MatchPolicy
	}
	return ""
}

func (m *ValidatingWebhook) GetNamespaceSelector() *v1.LabelSelector {
	if m != nil {
		return m.NamespaceSelector
	}
	return nil
}

func (m *ValidatingWebhook) GetObjectSelector() *v1.LabelSelector {
	if m != nil {
		return m.ObjectSelector
	}
	return nil
}

func (m *ValidatingWebhook) GetSideEffects() string {
	if m != nil && m.SideEffects != nil {
		return *m.SideEffects
	}
	return ""
}

func (m *ValidatingWebhook) GetTimeoutSeconds() int32 {
	if m != nil && m.TimeoutSeconds != nil {
		return *m.TimeoutSeconds
	}
	return 0
}

func (m *ValidatingWebhook) GetAdmissionReviewVersions() []string {
	if m != nil {
		return m.AdmissionReviewVersions
	}
	return nil
}

func (m *ValidatingWebhook) GetMatchConditions() []*MatchCondition {
	if m != nil {
		return m.MatchConditions
	}
	return nil
}

// ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.
type ValidatingWebhookConfiguration struct {
	// Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Webhooks is a list of webhooks and the affected resources and operations.
	// +optional
	// +patchMergeKey=name
	// +patchStrategy=merge
	// +listType=map
	// +listMapKey=name
	Webhooks             []*ValidatingWebhook `protobuf:"bytes,2,rep,name=Webhooks" json:"Webhooks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ValidatingWebhookConfiguration) Reset()         { *m = ValidatingWebhookConfiguration{} }
func (m *ValidatingWebhookConfiguration) String() string { return proto.CompactTextString(m) }
func (*ValidatingWebhookConfiguration) ProtoMessage()    {}
func (*ValidatingWebhookConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{8}
}

func (m *ValidatingWebhookConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatingWebhookConfiguration.Unmarshal(m, b)
}
func (m *ValidatingWebhookConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatingWebhookConfiguration.Marshal(b, m, deterministic)
}
func (m *ValidatingWebhookConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatingWebhookConfiguration.Merge(m, src)
}
func (m *ValidatingWebhookConfiguration) XXX_Size() int {
	return xxx_messageInfo_ValidatingWebhookConfiguration.Size(m)
}
func (m *ValidatingWebhookConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatingWebhookConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatingWebhookConfiguration proto.InternalMessageInfo

func (m *ValidatingWebhookConfiguration) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ValidatingWebhookConfiguration) GetWebhooks() []*ValidatingWebhook {
	if m != nil {
		return m.Webhooks
	}
	return nil
}

// ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.
type ValidatingWebhookConfigurationList struct {
	// Standard list metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// List of ValidatingWebhookConfiguration.
	Items                []*ValidatingWebhookConfiguration `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ValidatingWebhookConfigurationList) Reset()         { *m = ValidatingWebhookConfigurationList{} }
func (m *ValidatingWebhookConfigurationList) String() string { return proto.CompactTextString(m) }
func (*ValidatingWebhookConfigurationList) ProtoMessage()    {}
func (*ValidatingWebhookConfigurationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{9}
}

func (m *ValidatingWebhookConfigurationList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatingWebhookConfigurationList.Unmarshal(m, b)
}
func (m *ValidatingWebhookConfigurationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatingWebhookConfigurationList.Marshal(b, m, deterministic)
}
func (m *ValidatingWebhookConfigurationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatingWebhookConfigurationList.Merge(m, src)
}
func (m *ValidatingWebhookConfigurationList) XXX_Size() int {
	return xxx_messageInfo_ValidatingWebhookConfigurationList.Size(m)
}
func (m *ValidatingWebhookConfigurationList) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatingWebhookConfigurationList.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatingWebhookConfigurationList proto.InternalMessageInfo

func (m *ValidatingWebhookConfigurationList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ValidatingWebhookConfigurationList) GetItems() []*ValidatingWebhookConfiguration {
	if m != nil {
		return m.Items
	}
	return nil
}

// WebhookClientConfig contains the information to make a TLS
// connection with the webhook
type WebhookClientConfig struct {
	// `url` gives the location of the webhook, in standard URL form
	// (`scheme://host:port/path`). Exactly one of `url` or `service`
	// must be specified.
	//
	// The `host` should not refer to a service running in the cluster; use
	// the `service` field instead. The host might be resolved via external
	// DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
	// in-cluster DNS as that would be a layering violation). `host` may
	// also be an IP address.
	//
	// Please note that using `localhost` or `127.0.0.1` as a `host` is
	// risky unless you take great care to run this webhook on all hosts
	// which run an apiserver which might need to make calls to this
	// webhook. Such installs are likely to be non-portable, i.e., not easy
	// to turn up in a new cluster.
	//
	// The scheme must be "https"; the URL must begin with "https://".
	//
	// A path is optional, and if present may be any string permissible in
	// a URL. You may use the path to pass an arbitrary string to the
	// webhook, for example, a cluster identifier.
	//
	// Attempting to use a user or basic auth e.g. "user:password@" is not
	// allowed. Fragments ("#...") and query parameters ("?...") are not
	// allowed, either.
	//
	// +optional
	Url *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	// `service` is a reference to the service for this webhook. Either
	// `service` or `url` must be specified.
	//
	// If the webhook is running within the cluster, then you should use `service`.
	//
	// +optional
	Service *ServiceReference `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	// `caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
	// If unspecified, system trust roots on the apiserver are used.
	// +optional
	CaBundle             []byte   `protobuf:"bytes,2,opt,name=caBundle" json:"caBundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebhookClientConfig) Reset()         { *m = WebhookClientConfig{} }
func (m *WebhookClientConfig) String() string { return proto.CompactTextString(m) }
func (*WebhookClientConfig) ProtoMessage()    {}
func (*WebhookClientConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{10}
}

func (m *WebhookClientConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebhookClientConfig.Unmarshal(m, b)
}
func (m *WebhookClientConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebhookClientConfig.Marshal(b, m, deterministic)
}
func (m *WebhookClientConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebhookClientConfig.Merge(m, src)
}
func (m *WebhookClientConfig) XXX_Size() int {
	return xxx_messageInfo_WebhookClientConfig.Size(m)
}
func (m *WebhookClientConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_WebhookClientConfig.DiscardUnknown(m)
}

var xxx_messageInfo_WebhookClientConfig proto.InternalMessageInfo

func (m *WebhookClientConfig) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *WebhookClientConfig) GetService() *ServiceReference {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *WebhookClientConfig) GetCaBundle() []byte {
	if m != nil {
		return m.CaBundle
	}
	return nil
}

func init() {
	proto.RegisterType((*MatchCondition)(nil), "k8s.io.api.admissionregistration.v1.MatchCondition")
	proto.RegisterType((*MutatingWebhook)(nil), "k8s.io.api.admissionregistration.v1.MutatingWebhook")
	proto.RegisterType((*MutatingWebhookConfiguration)(nil), "k8s.io.api.admissionregistration.v1.MutatingWebhookConfiguration")
	proto.RegisterType((*MutatingWebhookConfigurationList)(nil), "k8s.io.api.admissionregistration.v1.MutatingWebhookConfigurationList")
	proto.RegisterType((*Rule)(nil), "k8s.io.api.admissionregistration.v1.Rule")
	proto.RegisterType((*RuleWithOperations)(nil), "k8s.io.api.admissionregistration.v1.RuleWithOperations")
	proto.RegisterType((*ServiceReference)(nil), "k8s.io.api.admissionregistration.v1.ServiceReference")
	proto.RegisterType((*ValidatingWebhook)(nil), "k8s.io.api.admissionregistration.v1.ValidatingWebhook")
	proto.RegisterType((*ValidatingWebhookConfiguration)(nil), "k8s.io.api.admissionregistration.v1.ValidatingWebhookConfiguration")
	proto.RegisterType((*ValidatingWebhookConfigurationList)(nil), "k8s.io.api.admissionregistration.v1.ValidatingWebhookConfigurationList")
	proto.RegisterType((*WebhookClientConfig)(nil), "k8s.io.api.admissionregistration.v1.WebhookClientConfig")
}

func init() {
	proto.RegisterFile("generated.proto", fileDescriptor_e6ed858329eb171d)
}

var fileDescriptor_e6ed858329eb171d = []byte{
	// 818 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x96, 0xdf, 0x6e, 0xdc, 0x44,
	0x14, 0xc6, 0xe5, 0xec, 0x9a, 0x66, 0xcf, 0x86, 0xa4, 0x1d, 0x90, 0xb0, 0xa2, 0xaa, 0x5a, 0xb9,
	0x80, 0xc2, 0x8d, 0x4d, 0xd2, 0x52, 0x72, 0xc3, 0x05, 0x0d, 0x08, 0x09, 0x25, 0x4a, 0x35, 0x91,
	0x1a, 0xf1, 0xef, 0x62, 0x32, 0x3e, 0xbb, 0x3b, 0xc4, 0xf6, 0x58, 0x33, 0xe3, 0x85, 0xf2, 0x1c,
	0x3c, 0x0f, 0x48, 0xdc, 0x70, 0xc1, 0xb3, 0xf0, 0x0e, 0x68, 0xc6, 0x8e, 0xd7, 0xeb, 0xdd, 0x16,
	0x2b, 0x2a, 0x12, 0x42, 0xdc, 0xd9, 0xdf, 0xf8, 0x7c, 0x7b, 0xbe, 0x99, 0x33, 0x3f, 0x2d, 0xec,
	0xcd, 0x30, 0x47, 0xc5, 0x0c, 0x26, 0x51, 0xa1, 0xa4, 0x91, 0xe4, 0xe1, 0xf5, 0xb1, 0x8e, 0x84,
	0x8c, 0x58, 0x21, 0x22, 0x96, 0x64, 0x42, 0x6b, 0x21, 0x73, 0x85, 0x33, 0xa1, 0x8d, 0x62, 0x46,
	0xc8, 0x3c, 0x5a, 0x1c, 0xee, 0x3f, 0xae, 0x3e, 0x8a, 0x59, 0x21, 0x32, 0xc6, 0xe7, 0x22, 0x47,
	0xf5, 0x22, 0x2e, 0xae, 0x67, 0x56, 0xd0, 0x71, 0x86, 0x86, 0xc5, 0x8b, 0xc3, 0xb8, 0x63, 0xbd,
	0x1f, 0xbf, 0xac, 0x4a, 0x95, 0xb9, 0x11, 0x19, 0xae, 0x15, 0x3c, 0xf9, 0xbb, 0x02, 0xcd, 0xe7,
	0x98, 0xb1, 0x6e, 0x5d, 0xf8, 0x19, 0xec, 0x9e, 0x31, 0xc3, 0xe7, 0x27, 0x32, 0x4f, 0x84, 0xed,
	0x99, 0x10, 0x18, 0xe6, 0x2c, 0xc3, 0xc0, 0x9b, 0x78, 0x07, 0x23, 0xea, 0x9e, 0xc9, 0x03, 0x00,
	0xfc, 0xb1, 0x50, 0xe8, 0x12, 0x06, 0x5b, 0x6e, 0xa5, 0xa5, 0x84, 0x7f, 0xfa, 0xb0, 0x77, 0x56,
	0x1a, 0x66, 0x44, 0x3e, 0xbb, 0xc4, 0xab, 0xb9, 0x94, 0xd7, 0x1b, 0x7d, 0xbe, 0x85, 0x1d, 0x9e,
	0x0a, 0xcc, 0xcd, 0x89, 0xcc, 0xa7, 0x62, 0xe6, 0x9c, 0xc6, 0x47, 0xc7, 0x51, 0x8f, 0x8d, 0x8c,
	0x6a, 0xdf, 0x93, 0x56, 0x3d, 0x5d, 0x71, 0x23, 0x67, 0xe0, 0xab, 0x32, 0x45, 0x1d, 0x0c, 0x26,
	0x83, 0x83, 0xf1, 0xd1, 0xc7, 0xbd, 0x6c, 0x69, 0x99, 0xe2, 0xa5, 0x30, 0xf3, 0xf3, 0x02, 0x2b,
	0x51, 0xd3, 0xca, 0x85, 0xbc, 0x0b, 0x6f, 0x4e, 0x99, 0x48, 0x4b, 0x85, 0xcf, 0x64, 0x2a, 0xf8,
	0x8b, 0x60, 0xe8, 0x92, 0xac, 0x8a, 0x64, 0x02, 0xe3, 0xcc, 0x6e, 0x60, 0xfd, 0xcd, 0xc8, 0x7d,
	0xd3, 0x96, 0x08, 0x83, 0x7b, 0x36, 0xbc, 0x2e, 0x18, 0xc7, 0x0b, 0x4c, 0x91, 0x1b, 0xa9, 0x02,
	0xdf, 0x25, 0x7f, 0xd4, 0x6a, 0xb1, 0x39, 0xb6, 0xa8, 0xb8, 0x9e, 0x59, 0x41, 0x47, 0x76, 0x3a,
	0x6c, 0x8f, 0xa7, 0xec, 0x0a, 0xd3, 0x9b, 0x52, 0xba, 0xee, 0x46, 0xbe, 0x81, 0x5d, 0x79, 0xf5,
	0x3d, 0x72, 0xd3, 0xf8, 0x8f, 0x6f, 0xef, 0xdf, 0xb1, 0xb2, 0x09, 0xb5, 0x48, 0xf0, 0xf3, 0xe9,
	0x14, 0xb9, 0xd1, 0xc1, 0x1b, 0x55, 0xc2, 0x96, 0x44, 0xde, 0x87, 0x5d, 0x3b, 0x63, 0xb2, 0x34,
	0x17, 0xc8, 0x65, 0x9e, 0xe8, 0xe0, 0xce, 0xc4, 0x3b, 0xf0, 0x69, 0x47, 0x25, 0xc7, 0xf0, 0x4e,
	0x73, 0x0e, 0x14, 0x17, 0x02, 0x7f, 0x78, 0x8e, 0xca, 0xbe, 0xe8, 0x60, 0x7b, 0x32, 0x38, 0x18,
	0xd1, 0x97, 0x2d, 0x93, 0x08, 0x88, 0x42, 0x91, 0x2f, 0x24, 0x77, 0x67, 0x54, 0x6f, 0x36, 0xb8,
	0x56, 0x36, 0xac, 0x90, 0xef, 0x60, 0x2f, 0x5b, 0x19, 0x6b, 0x1d, 0xec, 0xb8, 0xa1, 0x78, 0xd4,
	0x6b, 0x28, 0x56, 0xaf, 0x04, 0xed, 0x7a, 0x85, 0xbf, 0x78, 0x70, 0xbf, 0x33, 0xef, 0xd5, 0x0c,
	0x96, 0x95, 0x07, 0x39, 0x85, 0x6d, 0xbb, 0xb9, 0x09, 0x33, 0xcc, 0x5d, 0x80, 0xf1, 0xd1, 0x87,
	0xfd, 0x8e, 0xe2, 0xdc, 0xed, 0xfd, 0x19, 0x1a, 0x46, 0x1b, 0x07, 0xf2, 0x0c, 0xb6, 0xeb, 0x5f,
	0xd1, 0xc1, 0x96, 0x8b, 0xf1, 0xb8, 0x5f, 0x8c, 0xd5, 0x16, 0x69, 0xe3, 0x12, 0xfe, 0xee, 0xc1,
	0xe4, 0x55, 0x01, 0x4e, 0x85, 0x36, 0xe4, 0xcb, 0xb5, 0x10, 0x51, 0xcf, 0x79, 0x12, 0xba, 0x1b,
	0xe1, 0x12, 0x7c, 0x61, 0x30, 0xbb, 0xe9, 0xff, 0xd3, 0xdb, 0xf4, 0xbf, 0xd2, 0x21, 0xad, 0xfc,
	0xc2, 0x9f, 0x60, 0x68, 0xaf, 0x30, 0xb9, 0x0f, 0x23, 0x56, 0x88, 0x2f, 0x94, 0x2c, 0x0b, 0x1d,
	0x78, 0x6e, 0x9a, 0x96, 0x82, 0x9d, 0x61, 0x56, 0x88, 0x66, 0xda, 0xb6, 0xdc, 0x7a, 0x5b, 0xb2,
	0xf5, 0x0a, 0xb5, 0x2c, 0x15, 0xaf, 0x01, 0x32, 0xa2, 0x4b, 0x81, 0xbc, 0x0d, 0xbe, 0xe6, 0xb2,
	0xc0, 0x9a, 0x01, 0xd5, 0x4b, 0xa8, 0x81, 0xac, 0xe3, 0xc3, 0xc2, 0x52, 0x36, 0x6f, 0x75, 0x2b,
	0x2d, 0x85, 0x7c, 0x02, 0x43, 0x0b, 0x98, 0x1a, 0x7e, 0x1f, 0xf4, 0xa6, 0x14, 0x75, 0x65, 0x61,
	0x0a, 0x77, 0x2f, 0x50, 0x2d, 0x04, 0x47, 0x8a, 0x53, 0x54, 0x98, 0x73, 0x17, 0xbe, 0x81, 0x42,
	0x0d, 0xdc, 0xa5, 0xd0, 0x90, 0x78, 0xab, 0x45, 0x62, 0x02, 0xc3, 0x82, 0x99, 0x79, 0x30, 0xa8,
	0x34, 0xfb, 0xec, 0x34, 0xa9, 0x8c, 0xcb, 0xe8, 0x53, 0xf7, 0x1c, 0xfe, 0xea, 0xc3, 0xbd, 0xe7,
	0x2c, 0x15, 0xc9, 0xff, 0x6c, 0xff, 0xd7, 0xb0, 0x1d, 0xfe, 0x5b, 0x6c, 0xdf, 0xc0, 0xea, 0xf1,
	0x6b, 0x64, 0xf5, 0x6f, 0x1e, 0x3c, 0x58, 0x9b, 0xe0, 0x7f, 0x92, 0xd6, 0x74, 0x8d, 0xd6, 0x4f,
	0x7a, 0x05, 0x59, 0x6b, 0xb2, 0xc5, 0xeb, 0x3f, 0x3c, 0x08, 0x5f, 0x1d, 0xe2, 0xb5, 0x13, 0xfb,
	0xab, 0x55, 0x62, 0x9f, 0xdc, 0x2e, 0xc3, 0x46, 0x66, 0xff, 0xec, 0xc1, 0x5b, 0x1b, 0xae, 0x3c,
	0xb9, 0x0b, 0x83, 0x52, 0xa5, 0x35, 0x93, 0xec, 0x23, 0x39, 0x87, 0x3b, 0xba, 0x82, 0x5d, 0x9d,
	0xe7, 0xa3, 0x5e, 0x6d, 0x74, 0x01, 0x49, 0x6f, 0x5c, 0xc8, 0x3e, 0x6c, 0x73, 0xf6, 0xb4, 0xcc,
	0x93, 0x1a, 0xc0, 0x3b, 0xb4, 0x79, 0x7f, 0xfa, 0xde, 0xd7, 0x0f, 0x97, 0xff, 0xa2, 0xe3, 0x8d,
	0xe6, 0xf1, 0xe2, 0xf0, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe6, 0xd4, 0x87, 0xdd, 0x08, 0x0c,
	0x00, 0x00,
}
